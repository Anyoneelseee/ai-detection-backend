'''Bubble Sort
Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.
Example:
First Pass:
( 5 1 4 2 8 ) –> ( 1 5 4 2 8 ), Here, algorithm compares the first two elements, and swaps since 5 > 1.
( 1 5 4 2 8 ) –>  ( 1 4 5 2 8 ), Swap since 5 > 4
( 1 4 5 2 8 ) –>  ( 1 4 2 5 8 ), Swap since 5 > 2
( 1 4 2 5 8 ) –> ( 1 4 2 5 8 ), Now, since these elements are already in order (8 > 5), algorithm does not swap them.

Second Pass:
( 1 4 2 5 8 ) –> ( 1 4 2 5 8 )
( 1 4 2 5 8 ) –> ( 1 2 4 5 8 ), Swap since 4 > 2
( 1 2 4 5 8 ) –> ( 1 2 4 5 8 )
( 1 2 4 5 8 ) –>  ( 1 2 4 5 8 )
Now, the array is already sorted, but our algorithm does not know if it is completed. The algorithm needs one whole pass without any swap to know it is sorted.

Third Pass:
( 1 2 4 5 8 ) –> ( 1 2 4 5 8 )
( 1 2 4 5 8 ) –> ( 1 2 4 5 8 )
( 1 2 4 5 8 ) –> ( 1 2 4 5 8 )
( 1 2 4 5 8 ) –> ( 1 2 4 5 8 )'''

# Python program for implementation of Bubble Sort

def bubbleSort(arr):
	n = len(arr)

	# Traverse through all array elements
	for i in range(n):

		# Last i elements are already in place
		for j in range(0, n-i-1):

			# traverse the array from 0 to n-i-1
			# Swap if the element found is greater
			# than the next element
			if arr[j] > arr[j+1] :
				arr[j], arr[j+1] = arr[j+1], arr[j]

# Driver code to test above
arr = [64, 34, 25, 12, 22, 11, 90]

bubbleSort(arr)

print ("Sorted array is:")
for i in range(len(arr)):
	print ("%d" %arr[i]),


n = int(input("Enter the number of terms: "))
a, b = 0, 1
for _ in range(n):
    print(a, end=' ')
    a, b = b, a + b

# -*- coding: utf-8 -*-
"""
Created on Sat Aug 13 19:25:33 2020

@author: Gulshan
"""



from collections import Counter

def check_anagram(string1, string2):
    return Counter(string1) == Counter(string2)


if __name__ == '__main__':
    string1 = input("Enter First String: ")
    string2 = input("Enter Second String: ")
    if check_anagram(string1, string2):
        print("Strings are Anagram!")
    else:
        print("Strings are not Anagram!")

# Grade Analyzer from CSV
import csv

def analyze_grades(filename):
    with open(filename, newline='') as f:
        reader = csv.reader(f)
        next(reader)
        grades = [int(row[1]) for row in reader]

    average = sum(grades) / len(grades)
    print(f"Average Grade: {average}")
    print(f"Highest Grade: {max(grades)}")
    print(f"Lowest Grade: {min(grades)}")

# Create a sample grades file
with open("grades.csv", "w", newline='') as f:
    writer = csv.writer(f)
    writer.writerow(["Name", "Grade"])
    writer.writerows([["Alice", 85], ["Bob", 78], ["Charlie", 92], ["Dana", 88]])

analyze_grades("grades.csv")
